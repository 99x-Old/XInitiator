# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pr:
  branches:
    include:
      -

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  templateArtifactName: 'XInitiatorAPI.Deployment'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: 
        pool:
          vmImage: 'windows-2019'
          variables:
            buildConfiguration: 'Release'
        steps:
          - task: UseDotNet@2
            displayName: 'Use .Net Core sdk 3.x'
            inputs:
              version: 3.x

          - task: DotNetCoreCLI@2
            displayName: Install dotnet ef
            inputs:
              command: 'custom'
              custom: tool
              arguments: 'install --global dotnet-ef'          

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: restore
              projects: '**/*.csproj'
                            
          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: |
                **/*.csproj              
              arguments: '--configuration Release' # Update this to match your need
          
          - task: DotNetCoreCLI@2
            displayName: Run tests
            inputs:
              command: 'test'
              projects: '**/*Test/*.csproj'
              arguments: '--configuration Release'   

          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: publish
              publishWebProjects: True
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: True
          
          - task: CopyFiles@2
            displayName: 'Copy Files to:  $(build.artifactstagingdirectory)'
            inputs:
              SourceFolder: '$(templateArtifactName)'
              TargetFolder: '$(build.artifactstagingdirectory)/$(templateArtifactSubPath)'
        
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'XInitiatorAPI.ARM'
              publishLocation: 'Container'
